---
- name: ensure pip is installed
  package: name=python-pip state=present use=yum
  tags:
    - common
    - lab_setup

- name: install tower-cli
  pip: name=ansible-tower-cli
  tags:
    - common
    - lab_setup

- name: disable ssl for tower-cli for the demo
  command: tower-cli config verify_ssl false
  tags:
    - common
    - lab_setup

- name: config username for ansible tower-cli
  command: tower-cli config username {{ tower_cli_user }}
  tags:
    - common
    - lab_setup

- name: config password for ansible tower-cli
  command: tower-cli config password {{ tower_cli_pass }}
  tags:
    - common
    - lab_setup

- name: Ensure the tower-cli application is installed
  pip:
    name: ansible-tower-cli
    state: present
  tags:
    - common
    - lab_setup

- name: Create all organizations
  shell: >
    tower-cli organization create
    --name "{{ item.name }}"
    --description "{{ item.description }}"
    --force-on-exists
  with_items: "{{ organizations }}"
  tags:
    - lab_setup

- name: Create all teams
  shell: >
    tower-cli team create
    --name "{{ item.name }}"
    --description "{{ item.description }}"
    --organization "{{ item.organization }}"
    --force-on-exists
  with_items: "{{ teams }}"
  tags:
    - lab_setup

- name: Create all projects
  shell: >
    tower-cli project create
    --name "{{ item.name }}"
    --description "{{ item.description }}"
    --organization "{{ item.organization }}"
    --scm-type "{{ item.scm_type }}"
    --scm-url "{{ item.scm_url }}"
    --scm-branch "{{ item.scm_branch }}"
    --scm-clean True
    --scm-delete-on-update True
    --scm-update-on-launch True
    --force-on-exists
  with_items: "{{ projects }}"
  tags:
    - lab_setup

- name: Create all users
  shell: >
    tower-cli user create
    --first-name "{{ item.first_name }}"
    --last-name "{{ item.last_name }}"
    --username "{{ item.username }}"
    --email "{{ item.email }}"
    --is-superuser "{{ item.superuser | bool }}"
    --is-system-auditor "{{ item.auditor | bool }}"
    --password "{{ item.password }}"
    --force-on-exists
  with_items: "{{ users }}"
  tags:
    - lab_setup

- name: Associate users with their organization
  shell: >
    tower-cli organization associate
    --user "{{ item.username }}"
    --organization "{{ item.organization }}"
  with_items:
    - "{{ users }}"
  tags:
    - lab_setup

- name: Associate users with their teams
  shell: >
    tower-cli team associate
    --user "{{ item.username }}"
    --team "{{ item.team }}"
  with_items:
    - "{{ users }}"
  tags:
    - lab_setup

- name: Create an inventory for each user
  shell: >
    tower-cli inventory create
    --name "{{ item.username }} inventory"
    --organization "{{ item.organization }}"
    --force-on-exists
  with_items: "{{ users }}"
  tags:
    - lab_setup

- name: Set up each users inventory
  shell: >
    tower-cli group create
    --name "{{ aws_region }}"
    --inventory "{{ item.username }} inventory"
    --credential "{{ aws_credential }}"
    --source ec2
    --source-regions "{{ aws_region }}"
    --instance-filters "tag:ansible_lab=True"
    --overwrite True
    --overwrite-vars True
    --update-on-launch True
    --force-on-exists
  with_items: "{{ users }}"}}}
  tags:
    - lab_setup

- name: Create Slack Notifiction template
  shell: >
    tower-cli notification_template create
    --name {{item.name}}
    --description {{item.description}}
    --notification-type slack
    --channels {{item.channels}}
    --token {{slack_token}}
  tags:
    - lab_setup
    - slack
